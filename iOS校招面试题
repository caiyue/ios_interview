
基础数据结构算法的考察 （1-2道）
基础概念的理解

知识背景相关的问题可以问问（非cs专业）

面试题不要太简单，今年校招要求会稍微偏高一些。


b就是给过
b-就不过了

三分之一到一半的通过率。


我是来自国际化事业部的开发工程师，我叫蔡月，本次面试是第一轮技术面试。
你做个简短的介绍吧：



操作系统：
进程和线程的区别，协程了解吗？  一个线程可以包含一个或多个协程，协程是一种用户态的轻量级线程，协程是由用户调度

管程，用来管理进程的。所谓的管程实际上是定义的一种数据结构和控制进程的一些操作的集合

管程就是代表共享资源的数据结构以及由对该共享数据结构实施操作的一组过程所组成的资源管理程序共同构成的一个操作系统的资源管理模块。管程被请求和释放临界资源的进程所调用。
管程定义了一个数据结构和能为并发进程所执行（在该数据结构上）的一组操作，这组操作能同步进程和改变管程中的数据。




多线程之间的数据同步，如何解决？
锁的类型都有哪些 ？锁的性能都如何？ 信号量、互斥锁，自旋锁为什么好 ？


在Linux下，信号量和线程互斥锁的实现都是通过futex系统调用。



做过c++是吗 ？ 智能指针，了解吗？


生产者消费者伪代码写一下
需要2个锁。


流量控制 & 拥塞控制的原理能说下吗 ？
滑动窗口：



TTP和TCP的长连接有何区别？HTTP中的keep-alive和TCP中keepalive又有什么区别？

1、TCP连接往往就是我们广义理解上的长连接，因为它具备双端连续收发报文的能力；开启了keep-alive的HTTP连接，也是一种长连接，但是它由于协议本身的限制，不具备双端主动收发报文的能力。

2、TCP中的 keepalive 是用来对长连接进行保鲜、保活的；HTTP中的 keep-alive 机制主要为了复用传输层的 TCP 连接，让TCP连接不被频繁创建和销毁，所以通常又叫做：HTTP persistent connection（持久连接） 和 HTTP connection reuse（连接重用）。

一句话总结就是：HTTP 的 keep-alive 是用来复用 TCP 连接，而 TCP 的 keepalive 机制用来保证连接双方的连通性。




TCP为什么可以保证可靠？
	a. ack
	b. 重传机制，序号，能讲清楚重传
	c. 可以扩展问问重传有什么隐患：造成资源浪费，性能降低。如果一个包丢了会进行等待，并重传整个待确认的序列，造成浪费。


为什么TCP有性能问题？
	a. 拥塞控制使用丢包来判定出现网络拥塞，而这是因为以前的网络都是有线网络，丢包的情况较少，当出现无线网络之后，丢包大大增加，如果一遇到连续丢包就回退的话，本意是减少整个网络上的流量，但是其实此时并没有因为带宽导致拥塞，反而造成了性能大幅下降。
	b. 三次握手
	c. 重传机制
	d. DDOS是怎么导致服务器瘫痪，服务器是怎么拖垮的，如何避免（封ip，负载均衡，加机器）？



数据库索引原理：
数据库索引：b+树，数据只存储在叶子结点里，非叶子结点存储索引，数据查询只需要遍历叶子结点即可。



了解那些设计模式：
mvvm
mvc
aop


tcp&udp的区别？ udp主要用在哪些场景 ？


https加密方案：
使用非对称加密将密钥加密后，发送出去，对方使用私钥揭秘后，然后双方使用同一个密钥进行加密和解密数据。
为了防止公钥在传输过程中被篡改，所以一般把公钥放在数字证书里。只要证书是安全的（系统内置根证书可以验证），公钥就是安全的。
数据传输对称加密的公钥是双端协商出来的。


https主要流程：
1）客户端发起一个http请求，连接到服务器的443端口。
2）服务端把自己的信息以数字证书的形式返回给客户端（证书内容有密钥公钥，网站地址，证书颁发机构，失效日期等）。证书中有一个公钥来加密信息，私钥由服务器持有。
3）验证证书的合法性
客户端收到服务器的响应后会先验证证书的合法性（证书中包含的地址与正在访问的地址是否一致，证书是否过期）。
4）生成随机密码（RSA签名）
如果验证通过，或用户接受了不受信任的证书，浏览器就会生成一个随机的对称密钥（session key）并用公钥加密，让服务端用私钥解密，解密后就用这个对称密钥进行传输了，并且能够说明服务端确实是私钥的持有者。
5）生成对称加密算法
验证完服务端身份后，客户端生成一个对称加密的算法和对应密钥，以公钥加密之后发送给服务端。此时被黑客截获也没用，因为只有服务端的私钥才可以对其进行解密。之后客户端与服务端可以用这个对称加密算法来加密和解密通信内容了。


charles抓包原理：
实际上就是作为中间代理，拦截服务端返回给客户端的证书（包含公钥），然后自己生成证书和公私钥，并把证书（包含公钥）返回给客户端
客户端拿到公钥，会加密本地生成的对称秘钥，charles拿到加密后的对称秘钥后，用自己的私钥解密，就拿到了对称秘钥。
后续的加解密都是利用这个对称秘钥。
https://zhuanlan.zhihu.com/p/67199487




linux 很熟悉，都做过什么？ 
git merge 和 rebase 的区别 ？




算法：
判断是否是环型链表
二叉树的高度
二叉树最近的公共祖先

二叉树前序中序，非递归算法
二叉树的相邻层级遍历顺序相反


LRU算法，不用写，说一说思路就行了。
字符串最长非重复子串，通过滑动窗口解决





XX同学你好，我是来自快手国际化研发团队的XX，负责XXX方向XX相关工作，本次面试是第一轮技术面试，正常我们会安排3个部分的面试内容，稍后可以从你的自我介绍开始，在自我介绍之后我们进入技术面试(coding环节)，最后我们预留5-10分钟做答疑环节，整体面试在60分钟左右；下面请简单做个自我介绍.......

2.由于本次校招没有笔试环节，建议大家在技术面试环节或者coding环节更多考察候选人的基础知识，作为第一面，题目难度可以控制在LeetCode 简单难度（建议面试反馈中 详细填写题目 避免二面官出相同问题）

3.答疑环节避坑 

对于校招同学关于Offer的任何问题都不需要回答，统一回复：“具体信息HR会在面试结束后单独和同学沟通”

对于同学关于团队情况的问题 建议统一回复：国际化为快手战略重点方向 团队增速较快 业务成长很有前景 具体团队规模不方便过多告知

其他如果有非常优秀的候选人希望提前吸引 可以单独告知HR进行标注；









